See english version below when encoding problem occurs.

한글

먼저 알아둘 것
    비밀번호를 물어보는 이유: 우분투에서 bison, flex, indent, svn을 깔기 위해 물어보는 것입니다. Martini에서는 본인 비밀번호를 입력하면 됩니다.
    
설치하기
    할 일
        ]$ chmod 777 cons
        ]$ ./cons
    효과
        ./dstemp에 disksim이 설치되고 ssd-patch도 설치됩니다.
        ./dstemp/test에 리퀘스트가 3개인 트레이스를 돌려볼 수 있도록 각종 파일과 스크립트가 만들어집니다.
    추가 사용법
        ]$ make t       // ssd-iozone.parv로 disksim 돌리기
        ]$ make tg      // gdb에서 돌리기
        ]$ make tc      // 컴파일 다시 하고 돌리기
        ]$ make tcg     // 컴파일 다시 하고 gdb에서 돌리기
        test]$ ./run    // 리퀘스트가 3개인 트레이스 돌리기
        test]$ ./run -g // gdb에서 돌리기

Svn 사용하기
    // 드디어 알아내고야 말았다네
    할 일
        ]$ svn add * --force
        ]$ svn st
            // ?나 ! 혹은 ~로 표시된 파일이 없는지 확인합니다. 있다면 복잡한 절차가 필요하지요. 이럴 경우 일단 commit이 되면 하고, '문제 발생시'를 보세요.
        ]$ svn commit
        	// 혹 안되면 ]$ svn commit -m ""을 시도해보세요.
            // 만약 내가 수정하는 중에 다른 사람이 commit을 해서 리비전이 올라간 경우라면 ]$ svn update를 하고 commit을 한 번 더 하세요. 그러나 이 경우 충돌 해결이 불가능하면(다른 곳을 고쳤다면 알아서 자동으로 merge 해줍니다.) ... 그땐 저도 모릅니다. 뭐 resolve를 선언해주는 방법이 있다고 하던데 그건 차차 알아보기로 하지요.
        :q! 혹은 ^X를 눌러 로그 보기를 빠져나갑니다.
        c를 눌러서 continue합니다.
        사용자의 비밀번호를 물어보면 자신의 비밀번호를 입력합니다.
        유저 이름을 물어보면 j.proj1.2012@gmail.com을 입력합니다.
        j.proj1.201@gmail.com의 비밀번호를 물어보면 code.google.com/hosting/settings에 가서 비빌번호를 보고 입력합니다.
        리비전이 올라갔는지를 확인합니다.
            // 리비전이 올라가지 않았다면 수정사항이 제대로 반영되지 않은 것입니다.
        ]$ svn st
            // 아무 것도 나오지 않는지를 확인합니다. 커밋하고 나서도 뭔가 나온다면 수정사항이 제대로 반영되지 않은 것입니다.
    효과
        Google code에 변경 내용을 커밋합니다.
    문제 발생시
        문제의_디렉토리]$ find . -name .svn -print0 | xargs -0 rm -rf
        문제의_디렉토리/..]$ mv 문제의_디렉토리 문제의_디렉토리_temp
        문제의_디렉토리/..]$ svn rm 문제의_디렉토리
        문제의_디렉토리/..]$ svn commit
        ^X
        c
        문제의_디렉토리/..]$ mv 문제의_디렉토리_temp 문제의_디렉토리
        '할 일'을 반복
            
        자세한 설명
            svn add는 (vi, make 등으로) 새로 생성된 파일을 svn 관리 대상에 포함시키겠다고 선언하는 것입니다. 관리 대상의 정보는 각 디렉토리의 .svn에 저장되어 있습니다. 이 .svn이 꼬이면 svn은 '뭘 관리하라는 건지 모르겠단 말이다'라며 각종 (이해할 수 없는) 메세지를 던지지요.
            해결 방법은 .svn을 정확하게 고쳐주는 것이겠죠. 사실 처음부터
                ]$ mv source_file dest_file
            대신
                ]$ svn mv source_file dest_file
            등과 같이 했다면 문제가 발생하지 않았습니다. svn mv 등이 알아서 .svn을 고치면서 파일 이동도 하기 때문이죠. svn cp, svn rm 등 파일 작업은 다 svn을 붙여서 해야 합니다. 하지만 가끔 까먹을 수도 있고 make clean에 있는 rm들을 다 svn rm으로 고칠 수는 없는 것 아니겠습니까? (그래서 가급적 make clean한 채로 commit 합시다. 귀찮더라도.)
            그래서 다음과 같은 방법이 있습니다. 문제의 디렉토리(예를 들어 dstemp/test)와 그 하위 디렉토리에 있는 (1)모든 .svn을 지우고 이름을 바꾼 뒤 (2)svn rm을 하고 (3)svn commit을 한 뒤에 (4)다시 원래대로 이름을 바꾸고 (5)새롭게 svn add를 합니다. 그러면 .svn이 지워지면서 이 디렉토리가 품고 있던 하위 디렉토리들의 svn 정보가 사라집니다. 그리고 이 디렉토리를 잠시 이름을 바꿔놓고 svn rm을 하면 svn 전체 정보에서도 이 디렉토리가 지워지죠. 그리고 일단 커밋을 한 번 하면, 문제의 디렉토리를 제대로 지운 셈이고, 문제의 디렉토리의 이름 바꾼 버전은 svn 관리 대상이 아닌 셈이 됩니다. 이제 이름을 다시 원래대로 바꾸고 svn add를 하면 svn이 잘 add 해줍니다. 전에 있던 그 꼬여있는 디렉토리를 추가하는 것이 아니라 완전히 새로운 디렉토리를 추가하는 것처럼 인식합니다. 이 경우 문제라면 새롭게 add한 그 디렉토리를 통째로 commit해야 되기 때문에 시간이 좀 걸린다는 것이지요. 여튼 결론! 다음과 같이 하면 됩니다.
                문제의_디렉토리]$ find . -name .svn -print0 | xargs -0 rm -rf
                문제의_디렉토리/..]$ mv 문제의_디렉토리 문제의_디렉토리_temp
                문제의_디렉토리/..]$ svn rm 문제의_디렉토리
                문제의_디렉토리/..]$ svn commit
                ^X
                c
                문제의_디렉토리/..]$ mv 문제의_디렉토리_temp 문제의_디렉토리
                '할 일'을 반복
                    // add하고 st확인 후 commit하고 등등을 하라는 거죠.
English

This script requires sudo permission for "apt-get" in Ubuntu, but still works in martini. Type your passward, it doesn't harm you.

For Installation and patch, do
    chmod 777 cons
    ./cons
then everything is done in
    ./dstemp

For running disksim under ssd-iozone.parv configuration, do
    make t
There are more cool features. Do
    make tg
    make tc
    make tcg
to run with gdb, recompile and run, recompile and run with gdb.

For testing with a simplified trace (includes only 3 I/O requests) go to
    ./dstemp/test
and
    ./run
or with gdb
    ./run -g
